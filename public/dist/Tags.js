(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["Tags"],{

/***/ "./resources/react/Admin/components/Form/Tags/Input.js":
/*!*************************************************************!*\
  !*** ./resources/react/Admin/components/Form/Tags/Input.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar SIZER_STYLES = {\n  position: 'absolute',\n  width: 0,\n  height: 0,\n  visibility: 'hidden',\n  overflow: 'scroll',\n  whiteSpace: 'pre'\n};\n\nvar STYLE_PROPS = ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'letterSpacing'];\n\nvar Input = function (_React$Component) {\n  _inherits(Input, _React$Component);\n\n  function Input(props) {\n    _classCallCheck(this, Input);\n\n    var _this = _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props));\n\n    _this.state = { inputWidth: null };\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.autoresize) {\n        this.copyInputStyles();\n        this.updateInputWidth();\n      }\n\n      if (this.props.autofocus) {\n        this.input.focus();\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      this.updateInputWidth();\n    }\n  }, {\n    key: 'UNSAFE_componentWillReceiveProps',\n    value: function UNSAFE_componentWillReceiveProps(newProps) {\n      if (this.input.value !== newProps.query) {\n        this.input.value = newProps.query;\n      }\n    }\n  }, {\n    key: 'copyInputStyles',\n    value: function copyInputStyles() {\n      var _this2 = this;\n\n      var inputStyle = window.getComputedStyle(this.input);\n\n      STYLE_PROPS.forEach(function (prop) {\n        _this2.sizer.style[prop] = inputStyle[prop];\n      });\n    }\n  }, {\n    key: 'updateInputWidth',\n    value: function updateInputWidth() {\n      var inputWidth = void 0;\n\n      if (this.props.autoresize) {\n        // scrollWidth is designed to be fast not accurate.\n        // +2 is completely arbitrary but does the job.\n        inputWidth = Math.ceil(this.sizer.scrollWidth) + 2;\n      }\n\n      if (inputWidth !== this.state.inputWidth) {\n        this.setState({ inputWidth: inputWidth });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          query = _props.query,\n          placeholder = _props.placeholder,\n          expandable = _props.expandable,\n          listboxId = _props.listboxId,\n          selectedIndex = _props.selectedIndex;\n\n\n      return React.createElement(\n        'div',\n        null,\n        React.createElement('input', {\n          className: this.props.classNames.searchInput,\n          ref: function ref(c) {\n            _this3.input = c;\n          },\n          value: query,\n          placeholder: placeholder,\n          role: 'combobox',\n          'aria-autocomplete': 'list',\n          'aria-label': placeholder,\n          'aria-owns': listboxId,\n          'aria-activedescendant': selectedIndex > -1 ? listboxId + '-' + selectedIndex : null,\n          'aria-expanded': expandable,\n          onChange: function onChange() {},\n          style: { width: this.state.inputWidth } }),\n        React.createElement(\n          'div',\n          { ref: function ref(c) {\n              _this3.sizer = c;\n            }, style: SIZER_STYLES },\n          query || placeholder\n        )\n      );\n    }\n  }]);\n\n  return Input;\n}(React.Component);\n\nmodule.exports = Input;\n\n//# sourceURL=webpack:///./resources/react/Admin/components/Form/Tags/Input.js?");

/***/ }),

/***/ "./resources/react/Admin/components/Form/Tags/Suggestions.js":
/*!*******************************************************************!*\
  !*** ./resources/react/Admin/components/Form/Tags/Suggestions.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction escapeForRegExp(query) {\n  return query.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nfunction filterSuggestions(query, suggestions, length) {\n  var regex = new RegExp('(?:^|\\\\s)' + escapeForRegExp(query), 'i');\n  return suggestions.filter(function (item) {\n    return regex.test(item.name);\n  }).slice(0, length);\n}\n\nvar Suggestions = function (_React$Component) {\n  _inherits(Suggestions, _React$Component);\n\n  function Suggestions(props) {\n    _classCallCheck(this, Suggestions);\n\n    var _this = _possibleConstructorReturn(this, (Suggestions.__proto__ || Object.getPrototypeOf(Suggestions)).call(this, props));\n\n    _this.state = {\n      options: filterSuggestions(_this.props.query, _this.props.suggestions, _this.props.maxSuggestionsLength)\n    };\n    return _this;\n  }\n\n  _createClass(Suggestions, [{\n    key: 'UNSAFE_componentWillReceiveProps',\n    value: function UNSAFE_componentWillReceiveProps(newProps) {\n      this.setState({\n        options: filterSuggestions(newProps.query, newProps.suggestions, newProps.maxSuggestionsLength)\n      });\n    }\n  }, {\n    key: 'handleMouseDown',\n    value: function handleMouseDown(item, e) {\n      // focus is shifted on mouse down but calling preventDefault prevents this\n      e.preventDefault();\n      this.props.addTag(item);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.expandable || !this.state.options.length) {\n        return null;\n      }\n\n      var options = this.state.options.map(function (item, i) {\n        var key = _this2.props.listboxId + '-' + i;\n        var classNames = [];\n\n        if (_this2.props.selectedIndex === i) {\n          classNames.push(_this2.props.classNames.suggestionActive);\n        }\n\n        if (item.disabled) {\n          classNames.push(_this2.props.classNames.suggestionDisabled);\n        }\n\n        return React.createElement(\n          'li',\n          {\n            id: key,\n            key: key,\n            role: 'option',\n            className: classNames.join(' '),\n            'aria-disabled': item.disabled === true,\n            onMouseDown: _this2.handleMouseDown.bind(_this2, item) },\n          React.createElement(\n            'span',\n            null,\n            item.name\n          )\n        );\n      });\n\n      return React.createElement(\n        'div',\n        { className: this.props.classNames.suggestions },\n        React.createElement(\n          'ul',\n          { role: 'listbox', id: this.props.listboxId },\n          options\n        )\n      );\n    }\n  }]);\n\n  return Suggestions;\n}(React.Component);\n\nmodule.exports = Suggestions;\n\n//# sourceURL=webpack:///./resources/react/Admin/components/Form/Tags/Suggestions.js?");

/***/ }),

/***/ "./resources/react/Admin/components/Form/Tags/Tag.js":
/*!***********************************************************!*\
  !*** ./resources/react/Admin/components/Form/Tags/Tag.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nmodule.exports = function (props) {\n  return React.createElement(\n    'button',\n    { type: 'button', className: props.classNames.selectedTag, title: 'Click to remove tag', onClick: props.onDelete },\n    React.createElement(\n      'span',\n      { className: props.classNames.selectedTagName },\n      props.tag.name\n    )\n  );\n};\n\n//# sourceURL=webpack:///./resources/react/Admin/components/Form/Tags/Tag.js?");

/***/ }),

/***/ "./resources/react/Admin/components/Form/Tags/index.js":
/*!*************************************************************!*\
  !*** ./resources/react/Admin/components/Form/Tags/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar PropTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\nvar Tag = __webpack_require__(/*! ./Tag */ \"./resources/react/Admin/components/Form/Tags/Tag.js\");\nvar Input = __webpack_require__(/*! ./Input */ \"./resources/react/Admin/components/Form/Tags/Input.js\");\nvar Suggestions = __webpack_require__(/*! ./Suggestions */ \"./resources/react/Admin/components/Form/Tags/Suggestions.js\");\n\nvar KEYS = {\n  ENTER: 13,\n  TAB: 9,\n  BACKSPACE: 8,\n  UP_ARROW: 38,\n  DOWN_ARROW: 40\n};\n\nvar CLASS_NAMES = {\n  root: 'react-tags',\n  rootFocused: 'is-focused',\n  selected: 'react-tags__selected',\n  selectedTag: 'react-tags__selected-tag',\n  selectedTagName: 'react-tags__selected-tag-name',\n  search: 'react-tags__search',\n  searchInput: 'react-tags__search-input',\n  suggestions: 'react-tags__suggestions',\n  suggestionActive: 'is-active',\n  suggestionDisabled: 'is-disabled'\n};\n\nvar Tags = function (_React$Component) {\n  _inherits(Tags, _React$Component);\n\n  function Tags(props) {\n    _classCallCheck(this, Tags);\n\n    var _this = _possibleConstructorReturn(this, (Tags.__proto__ || Object.getPrototypeOf(Tags)).call(this, props));\n\n    _this.state = {\n      query: '',\n      focused: false,\n      expandable: false,\n      selectedIndex: -1,\n      classNames: Object.assign({}, CLASS_NAMES, _this.props.classNames)\n    };\n    return _this;\n  }\n\n  _createClass(Tags, [{\n    key: 'UNSAFE_componentWillReceiveProps',\n    value: function UNSAFE_componentWillReceiveProps(newProps) {\n      this.setState({\n        classNames: Object.assign({}, CLASS_NAMES, newProps.classNames)\n      });\n    }\n  }, {\n    key: 'handleInput',\n    value: function handleInput(e) {\n      var query = e.target.value;\n\n      if (this.props.handleInputChange) {\n        this.props.handleInputChange(query);\n      }\n\n      this.setState({ query: query });\n    }\n  }, {\n    key: 'handleKeyDown',\n    value: function handleKeyDown(e) {\n      var _state = this.state,\n          query = _state.query,\n          selectedIndex = _state.selectedIndex;\n      var _props = this.props,\n          delimiters = _props.delimiters,\n          delimiterChars = _props.delimiterChars;\n\n      // when one of the terminating keys is pressed, add current query to the tags.\n\n      if (delimiters.indexOf(e.keyCode) > -1 || delimiterChars.indexOf(e.key) > -1) {\n        if (query || selectedIndex > -1) {\n          e.preventDefault();\n        }\n\n        if (query.length >= this.props.minQueryLength) {\n          // Check if the user typed in an existing suggestion.\n          var match = this.suggestions.state.options.findIndex(function (suggestion) {\n            return suggestion.name.search(new RegExp('^' + query + '$', 'i')) === 0;\n          });\n\n          var index = selectedIndex === -1 ? match : selectedIndex;\n\n          if (index > -1) {\n            this.addTag(this.suggestions.state.options[index]);\n          } else if (this.props.allowNew) {\n            this.addTag({ name: query });\n          }\n        }\n      }\n\n      // when backspace key is pressed and query is blank, delete the last tag\n      if (e.keyCode === KEYS.BACKSPACE && query.length === 0 && this.props.allowBackspace) {\n        this.deleteTag(this.props.tags.length - 1);\n      }\n\n      if (e.keyCode === KEYS.UP_ARROW) {\n        e.preventDefault();\n\n        // if last item, cycle to the bottom\n        if (selectedIndex <= 0) {\n          this.setState({ selectedIndex: this.suggestions.state.options.length - 1 });\n        } else {\n          this.setState({ selectedIndex: selectedIndex - 1 });\n        }\n      }\n\n      if (e.keyCode === KEYS.DOWN_ARROW) {\n        e.preventDefault();\n\n        this.setState({ selectedIndex: (selectedIndex + 1) % this.suggestions.state.options.length });\n      }\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick(e) {\n      if (document.activeElement !== e.target) {\n        this.input.input.focus();\n      }\n    }\n  }, {\n    key: 'handleBlur',\n    value: function handleBlur() {\n      this.setState({ focused: false, selectedIndex: -1 });\n\n      if (this.props.handleBlur) {\n        this.props.handleBlur();\n      }\n    }\n  }, {\n    key: 'handleFocus',\n    value: function handleFocus() {\n      this.setState({ focused: true });\n\n      if (this.props.handleFocus) {\n        this.props.handleFocus();\n      }\n    }\n  }, {\n    key: 'addTag',\n    value: function addTag(tag) {\n      if (tag.disabled) {\n        return;\n      }\n\n      this.props.handleAddition(tag);\n\n      // reset the state\n      this.setState({\n        query: '',\n        selectedIndex: -1\n      });\n    }\n  }, {\n    key: 'deleteTag',\n    value: function deleteTag(i) {\n      this.props.handleDelete(i);\n      this.setState({ query: '' });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var listboxId = 'ReactTags-listbox';\n\n      var TagComponent = this.props.tagComponent || Tag;\n\n      var tags = this.props.tags.map(function (tag, i) {\n        return React.createElement(TagComponent, {\n          key: i,\n          tag: tag,\n          classNames: _this2.state.classNames,\n          onDelete: _this2.deleteTag.bind(_this2, i) });\n      });\n\n      var expandable = this.state.focused && this.state.query.length >= this.props.minQueryLength;\n      var classNames = [this.state.classNames.root];\n\n      this.state.focused && classNames.push(this.state.classNames.rootFocused);\n\n      return React.createElement(\n        'div',\n        { className: classNames.join(' '), onClick: this.handleClick.bind(this) },\n        React.createElement(\n          'div',\n          { className: this.state.classNames.selected, 'aria-live': 'polite', 'aria-relevant': 'additions removals' },\n          tags\n        ),\n        React.createElement(\n          'div',\n          {\n            className: this.state.classNames.search,\n            onBlurCapture: this.handleBlur.bind(this),\n            onFocusCapture: this.handleFocus.bind(this),\n            onInput: this.handleInput.bind(this),\n            onKeyDown: this.handleKeyDown.bind(this) },\n          React.createElement(Input, _extends({}, this.state, {\n            ref: function ref(c) {\n              _this2.input = c;\n            },\n            listboxId: listboxId,\n            autofocus: this.props.autofocus,\n            autoresize: this.props.autoresize,\n            expandable: expandable,\n            placeholder: this.props.placeholder })),\n          React.createElement(Suggestions, _extends({}, this.state, {\n            ref: function ref(c) {\n              _this2.suggestions = c;\n            },\n            listboxId: listboxId,\n            expandable: expandable,\n            suggestions: this.props.suggestions,\n            addTag: this.addTag.bind(this),\n            maxSuggestionsLength: this.props.maxSuggestionsLength }))\n        )\n      );\n    }\n  }]);\n\n  return Tags;\n}(React.Component);\n\nTags.defaultProps = {\n  tags: [],\n  placeholder: 'Add new tag',\n  suggestions: [],\n  autofocus: true,\n  autoresize: true,\n  delimiters: [KEYS.TAB, KEYS.ENTER],\n  delimiterChars: [],\n  minQueryLength: 2,\n  maxSuggestionsLength: 6,\n  allowNew: false,\n  allowBackspace: true,\n  tagComponent: null\n};\n\nTags.propTypes = {\n  tags: PropTypes.arrayOf(PropTypes.object),\n  placeholder: PropTypes.string,\n  suggestions: PropTypes.arrayOf(PropTypes.object),\n  autofocus: PropTypes.bool,\n  autoresize: PropTypes.bool,\n  delimiters: PropTypes.arrayOf(PropTypes.number),\n  delimiterChars: PropTypes.arrayOf(PropTypes.string),\n  handleDelete: PropTypes.func.isRequired,\n  handleAddition: PropTypes.func.isRequired,\n  handleInputChange: PropTypes.func,\n  handleFocus: PropTypes.func,\n  handleBlur: PropTypes.func,\n  minQueryLength: PropTypes.number,\n  maxSuggestionsLength: PropTypes.number,\n  classNames: PropTypes.object,\n  allowNew: PropTypes.bool,\n  allowBackspace: PropTypes.bool,\n  tagComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element])\n};\n\nexports.default = Tags;\n\n//# sourceURL=webpack:///./resources/react/Admin/components/Form/Tags/index.js?");

/***/ })

}]);